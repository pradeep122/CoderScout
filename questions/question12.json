{
    "description": "<h1>Problem Statement</h1> <p>Elly's evil teacher assistant Torb has given her the following puzzle: 42 -> 1, 1337 -> 0, 669 -> 3, 1882 -> 4, 688 -> 5, 12345 -> 1, 67890 -> 5, 123 -> 0, 456 -> 2, 789 -> 3. Given this information, 45678 -> ? Thanks to her fast thinking and problem-solving intuition she has found the solution: Google. The answer turned out to be the total number of 'holes' in the digits of the number's decimal representation (with no extra leading zeroes). We can see that the digits 1, 2, 3, 5, and 7 contain no holes, 0, 4, 6, and 9 each has one hole, and 8 contains two holes. Therefore the answer to the puzzle is 45678 -> 1 + 0 + 1 + 0 + 2 = 4. <p>You want to impress Elly, so you decide to write a program that will find the correct answer for certain integers. Given an int number, return the total number of holes in that number.</p> </p> <h2>Definition<h2><table>  <tr>    <td>Class:</td> <td>DigitHoles</td>  </tr>  <tr>    <td>Method:</td> <td>numHoles</td>  </tr>  <tr>    <td>Parameters:</td> <td>int</td>  </tr>  <tr>    <td>Returns:</td> <td>int</td>  </tr>  <tr>    <td>Method signature:</td> <td>int numHoles(int number)(be sure your method is public)</td>  </tr></table>   <h2>Notes </h2> <ul> <li>In some fonts, the digit '4' might not contain an enclosed hole, but for this problem you should assume it does.</li> </ul> <h2>Constraints </h2> <ul> <li>number will be between 1 and 1000, inclusive.</li> </ul> <h2>Examples </h2> <p>42</p> <p>Returns: 1 4 has one hole, and 2 has no holes. </p> <p>669</p> <p>Returns: 3 Both sixes are counted.</p>",
    "solutions": {
        "10": "/*package whatever; // don't place package name! */\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass CoderScout\n{\n public static void main (String[] args) throws java.lang.Exception\n {\n // your code goes here }\n}\n",
        "56": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar remainder = ''\nprocess.stdin.on('data', function (chunk) {\n var lines = chunk.toString().split('\n');\n process.exit();\n});\n",
        "11": "#include <stdio.h>\nint main(void) {\n // your code goes here\n return 0;\n}\n",
        "1": "#include <iostream>\nusing namespace std;\nint main() {\n// your code goes here\nreturn 0;\n}\n"
    },
    "testCases": [{
        "input": "789",
        "output": "3",
        "weightage": 1
    }, {
        "input": "170",
        "output": "1",
        "weightage": 2
    }, {
        "input": "300",
        "output": "2",
        "weightage": 2
    }, {
        "input": "812",
        "output": "2",
        "weightage": 3
    }, {
        "input": "41",
        "output": "1",
        "weightage": 2
    }, {
        "input": "1000",
        "output": "3",
        "weightage": 2
    }],
    "createdBy": "pradeep@coderscout.co",
    "score": 75
}