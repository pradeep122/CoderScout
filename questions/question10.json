{
    "description": "<h1>Problem Statement</h1><p>In Russia, the Value Added Tax is 18% for almost all goods, with the exception of certain food items, which have a Value Added Tax of only 10%.</p><p>You are given a String product, the name of a product, and an int price, the price of the product before tax. You are also given a String[] food, each element of which is the name of a food product. If the given product is an element in food, it is a food item (and thus subject to 10% tax), and otherwise, it is a non-food item (and thus subject to 18% tax). Return the price of the product after tax has been added.</p><h2>Definition<h2><table>  <tr>    <td>Class:</td> <td>ValueAddedTax</td>  </tr>  <tr>    <td>Method:</td> <td>calculateFinalPrice</td>  </tr>  <tr>    <td>Parameters:</td> <td>String, int, String[]</td>  </tr>  <tr>    <td>Returns:</td> <td>double</td>  </tr>  <tr>    <td>Method signature:</td> <td>double calculateFinalPrice(String product, int price, String[] food)(be sure your method is public)</td>  </tr></table><h2>Note</h2><p>The returned value must have an absolute or relative error less than 1e-9.</p><h2>Constraints</h2><ul><li>product will contain between 1 and 50 characters, inclusive.</li><li>Each character in product will be a lowercase letter ('a'-'z').</li><li>price will be between 1 and 1000, inclusive.</li><li>food will contain between 1 and 50 elements, inclusive.</li><li>Each element of food will contain between 1 and 50 characters, inclusive.</li><li>Each character in each element of food will be a lowercase letter ('a'-'z').</li><li>All elements of food will be distinct.</li></ul><h2>Example </h2><p>milk</p><p>1</p><p>Returns: 1.1</p>",
    "solutions": {
        "10": "/*package whatever; // don't place package name! */\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass CoderScout\n{\n public static void main (String[] args) throws java.lang.Exception\n {\n // your code goes here \n}\n}\n",
        "56": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar remainder = ''\nprocess.stdin.on('data', function (chunk) {\n var lines = chunk.toString().split('\n');\n process.exit();\n});\n",
        "11": "#include <stdio.h>\nint main(void) {\n // your code goes here\n return 0;\n}\n",
        "1": "#include <iostream>\nusing namespace std;\nint main() {\n// your code goes here\nreturn 0;\n}\n"
    },
    "testCases": [{
        "input": "milk\n1\n{'bread', 'butter', 'milk'}",
        "output": "1.1",
        "weightage": 3
    }, {
        "input": "car\n100\n{'bread', 'butter', 'milk'}",
        "output": "118.0",
        "weightage": 3
    }, {
        "input": "abc\n57\n{'a', 'b', 'c'}",
        "output": "67.25999999999999",
        "weightage": 4
    }],
    "createdBy": "pradeep@coderscout.co",
    "score": 50
}