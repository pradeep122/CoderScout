{
    "description": "<h1>Problem Statement</h1><p> We can think of a cyclic word as a word written in a circle. To represent a cyclic word, we choose an arbitrary starting position and read the characters in clockwise order. So, 'picture' and 'turepic' are representations for the same cyclic word.</p><p> You are given a String[] words, each element of which is a representation of a cyclic word. Return the number of different cyclic words that are represented.</p><h2>Definition<h2><table>  <tr>    <td>Class:</td> <td>CyclicWords</td>  </tr>  <tr>    <td>Method:</td> <td>differentCW</td>  </tr>  <tr>    <td>Parameters:</td> <td> String[]</td>  </tr>  <tr>    <td>Returns:</td> <td>int</td>  </tr>  <tr>    <td>Method signature:</td> <td>    int differentCW(String[] words)(be sure your method is public)</td>  </tr></table>   <h2>Constraints</h2><ul><li>words will contain between 1 and 50 elements, inclusive.</li><li>Each element of words will contain between 1 and 50 lowercase letters ('a'-'z'), inclusive.</li></ul><h2>Example </h2><p> { 'picture', 'turepic', 'icturep', 'word', 'ordw' }</p><p>Returns: 2</p><p></p><p>'picture', 'turepic' and 'iceturep' are representations of the same cyclic word. 'word' and 'ordw' are representations of a second cyclic word.</p>",
    "solutions": {
        "10": "/*package whatever; // don't place package name! */\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass CoderScout\n{\n public static void main (String[] args) throws java.lang.Exception\n {\n // your code goes here }\n}\n",
        "56": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar remainder = ''\nprocess.stdin.on('data', function (chunk) {\n var lines = chunk.toString().split('\n');\n process.exit();\n});\n",
        "11": "#include <stdio.h>\nint main(void) {\n // your code goes here\n return 0;\n}\n",
        "1": "#include <iostream>\nusing namespace std;\nint main() {\n// your code goes here\nreturn 0;\n}\n"
    },
    "testCases": [{
        "input": "{ 'picture', 'turepic', 'icturep', 'word', 'ordw' }",
        "output": "2",
        "weightage": 3
    }, {
        "input": "{ 'ast', 'ats', 'tas', 'tsa', 'sat', 'sta', 'ttt' }",
        "output": "3",
        "weightage": 3
    }, {
        "input": "{'aaaa', 'aaa', 'aa', 'aaaa', 'aaaaa'}",
        "output": "4",
        "weightage": 3
    }],
    "createdBy": "pradeep@coderscout.co",
    "score": 75
}
