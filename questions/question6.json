{
    "description": "<h1>Problem Statement</h1><p>In the game of cricket, the goal of the batting team is to score runs. Two batsmen stand at opposite ends of the pitch (a long, narrow rectangle of ground). A member of the opposing team bowls the ball from one end of the pitch towards the batsman at the other end, who hits it (or tries to). The two batsmen then make zero or more runs before the ball is bowled again (each time this happens is called a ball). The batsmen make a run by each running to the other end of the pitch, thus swapping places (this also means that if they make an odd number of runs, then the other batsman will face the next ball - see example 0 for clarification). Although both batsmen run, only the one to whom the ball was bowled is credited with the runs. After every six balls, the direction of bowling is swapped around.</p><p>Given a int[] containing the number of runs scored from each ball, determine how many runs were scored by each of the batsmen. Return this as a int[] containing exactly two elements. The first element is the number of runs scored by the batsman who faced the first ball, and the second is the number of runs scored by the other batsman.</p><h2>Definition<h2><table>  <tr>    <td>Class:</td> <td>CricketScores</td>  </tr>  <tr>    <td>Method:</td> <td>totalRuns</td>  </tr>  <tr>    <td>Parameters:</td> <td>int[]</td>  </tr>  <tr>    <td>Returns:</td> <td>int[]</td>  </tr>  <tr>    <td>Method signature:</td> <td> int[] totalRuns(int[] runs)(be sure your method is public)</td>  </tr></table>   <h2>Constraints</h2><ul><li>runs will contain between 1 and 50 elements, inclusive.</li><li>Each element of runs will be between 0 and 6, inclusive.</li></ul><h2>Example </h2><p>{1, 4, 1, 2}</p><p>Returns: {3, 5 }</p><p>The first batsman scores 1, so they swap places. The second batsman then scores 4. Since they swap places an even number of times, he also faces the third ball and scores another 1 and they swap back. The first batsman then scores 2, bringing his total to 3. </p>",
    "solutions": {
        "10": "/*package whatever; // don't place package name! */\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass CoderScout\n{\n public static void main (String[] args) throws java.lang.Exception\n {\n // your code goes here }\n}\n",
        "56": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar remainder = ''\nprocess.stdin.on('data', function (chunk) {\n var lines = chunk.toString().split('\n');\n process.exit();\n});\n",
        "11": "#include <stdio.h>\nint main(void) {\n // your code goes here\n return 0;\n}\n",
        "1": "#include <iostream>\nusing namespace std;\nint main() {\n// your code goes here\nreturn 0;\n}\n"
    },
    "testCases": [{
        "input": "{1, 4, 1, 2}",
        "output": "{3, 5 }",
        "weightage": 1
    }, {
        "input": "{0, 0, 0, 0, 0, 0, 1}",
        "output": "{0, 1 }",
        "weightage": 2
    }, {
        "input": "{1, 0, 0, 0, 1, 4, 2, 1, 2}",
        "output": "{7, 4 }",
        "weightage": 2
    }, {
        "input": "{4, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 1, 4, 6, 4, 6}",
        "output": "{62, 0 }",
        "weightage": 3
    }, {
        "input": "{1, 3, 1, 3, 1, 3, 1, 3}",
        "output": "{6, 10 }",
        "weightage": 3
    }],
    "createdBy": "pradeep@coderscout.co",
    "score": 75
}
